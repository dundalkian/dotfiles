# Autogenerated config.py
# Documentation:
#   qute://help/configuring.html
#   qute://help/settings.html

# Uncomment this to still load settings configured via autoconfig.yml
# config.load_autoconfig()

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'file://*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'chrome://*/*')

# Enable JavaScript.
# Type: Bool
config.set('content.javascript.enabled', True, 'qute://*/*')

# Allowable user agent setting for google accounts
config.set('content.headers.user_agent', 'Mozilla/5.0 (X11; Linux x86_64; rv:57.0) Gecko/20100101 Firefox/77.0', 'https://accounts.google.com/*')

# Search engines which can be used via the address bar. Maps a search
# engine name (such as `DEFAULT`, or `ddg`) to a URL with a `{}`
# placeholder. The placeholder will be replaced by the search term, use
# `{{` and `}}` for literal `{`/`}` signs. The search engine named
# `DEFAULT` is used when `url.auto_search` is turned on and something
# else than a URL was entered to be opened. Other search engines can be
# used by prepending the search engine name to the search term, e.g.
# `:open google qutebrowser`.
# Type: Dict
c.url.searchengines = {'DEFAULT': 'https://duckduckgo.com/?q={}', "aw": "https://wiki.archlinux.org/?search={}", "py": "https://docs.python.org/3/search.html?q={}", "wiki": "https://en.m.wikipedia.org/w/index.php?search={}"}

# Bindings for normal mode
config.bind(',da', 'spawn aria2c -d /home/larry/Downloads/ -k 1M -x 16 -s 16 {clipboard}')

# Bindings for command mode
# following two bindings allow vim-like movement through the completion window, arrow keys begone!
config.bind('<Alt+j>', 'completion-item-focus --history next', mode='command')
config.bind('<Alt+k>', 'completion-item-focus --history prev', mode='command')

config.unbind('d')
# Bindings for prompt mode
config.bind('<Ctrl-m>', 'prompt-yes', mode='prompt')

# This is required for qutebrowser v2.0.0 It will load autoconfig.yml which is set through the qutebrowser gui
config.load_autoconfig()
